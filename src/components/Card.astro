---
import { getI18N } from "@/i18n";
import ArrowUpRight from "../icons/ArrowUpRight.astro";
import NewBadge from "./NewBadge.astro";

//Para cambiar idioma de textos
const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

const {
  id = "",
  date = "",
  href = "#",
  title = "Título predeterminado",
  description = "Subtítulo predeterminado",
  imageSrc = "",
  imageAlt = "Ícono predeterminado",
  status = "", // Nueva prop para controlar el badge con texto
} = Astro.props;
---

<a
  id={id}
  href={href}
  data-section={id}
  class="relative rounded-lg flex items-stretch border-[1px]
   border-hub-border
   dark:border-hub-border-dark
   hover:drop-shadow-md
   hover:bg-hub-background-nav
   dark:bg-hub-background-nav-dark
   hover:dark:bg-hub-background-dark group"
  target="_blank"
  rel="noopener noreferrer"
>
  <!-- Badge de "status" -->
  {
    status && (
      <div
        class=" absolute right-[22px] bottom-[3px] bg-sky-500/70
       text-white 
       text-[11px] 
       font-medium px-2 py-0.5 rounded-lg shadow-md z-10"
      >
        {status}
      </div>
    )
  }

  <!-- Contenedor izquierdo -->

  <div
    class="w-[92px] aspect-square rounded-l-lg overflow-hidden flex-shrink-0 border-hub-border
        dark:border-hub-border-dark
      dark:bg-hub-background"
  >
    <img src={imageSrc} alt={imageAlt} class="w-full h-full object-cover" />
  </div>

  <div class="p-4">
    <div class="h-[90px] w-full grid grid-rows-[auto_1fr_auto]">
      <div class="flex justify-between items-center">
        <h2
          class="font-medium text-base text-hub-title dark:text-hub-title-dark"
        >
          {title}
        </h2>
      </div>

      <small class="text-hub-subtitle dark:text-hub-subtitle-dark text-sm">
        {description}
      </small>

      <small class="text-hub-subtitle dark:text-hub-subtitle-dark text-[10px]"
        >{date}</small
      >
    </div>
    <!-- Icono derecho -->
    <ArrowUpRight
      class="absolute right-0 bottom-0 size-6 text-hub-subtitle dark:text-hub-subtitle-dark transition-transform duration-300 ease-in-out group-hover:rotate-45"
    />
  </div>
</a>

<!-- <div
  class="bg-white border border-[#E5E7EB] rounded-lg p-4 w-full max-w-[370px] h-[242px] grid grid-rows-[auto_1fr_auto]"
>
  <div class="flex justify-between items-center">
    <h2 class="font-semibold text-lg">{title}</h2>
    <div class="flex gap-2">
      {
        !isArchived && (
          <button
            aria-label="edit button"
            onClick={onEdit}
            class="text-[#9CA3AF] hover:text-gray-700 cursor-pointer"
          >
            <Edit size={16} />
          </button>
        )
      }
      <button
        aria-label="delete button"
        onClick={handleDelete}
        class="text-[#9CA3AF] hover:text-red-600 cursor-pointer"
      >
        <Trash2 size={16} />
      </button>
    </div>
  </div>

  <p class="text-[#4B5563] mt-2">{description}</p>

  <div class="mt-3 text-sm text-[#6B7280] flex justify-between items-center">
    <span>Created: {date}</span>
    <button
      aria-label="Archivated"
      onClick={onArchive}
      class="text-[#2563EB] cursor-pointer"
    >
      {isArchived ? "Unarchive" : "Archive"}
    </button>
  </div>
</div> -->
